package Gui.Reservation.Controllers;

import Models.Reservation.ReservationPack;
import Services.Reservation.Crud.ReservationPackService;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.event.ActionEvent;

import java.time.LocalDate;
import java.util.List;

public class AjoutReservPack {

    @FXML
    private TextField nomField, prenomField, adresseField, emailField, numTelField;

    @FXML
    private TextArea descriptionField;

    @FXML
    private DatePicker dateField;

    @FXML
    private ComboBox<String> packField; // La ComboBox qui affiche les noms des packs

    @FXML
    private Button ajouterButton, cancelButton;

    private final ReservationPackService reservationService = new ReservationPackService();

    @FXML
    public void initialize() {
        // Charger les packs disponibles dans la ComboBox
        loadPackNames();
    }

    private void loadPackNames() {
        List<String> packNames = reservationService.getAllPackNames();
        ObservableList<String> observablePackNames = FXCollections.observableArrayList(packNames);
        packField.setItems(observablePackNames);
    }

    @FXML
    private void ajouterReservation(ActionEvent event) {
        String nom = nomField.getText();
        String prenom = prenomField.getText();
        String adresse = adresseField.getText();
        String email = emailField.getText();
        String numTel = numTelField.getText();
        String description = descriptionField.getText();
        LocalDate date = dateField.getValue();
        String packName = packField.getValue(); // Récupérer le nom du pack sélectionné

        // Vérifier que tous les champs sont remplis
        if (nom.isEmpty() || prenom.isEmpty() || adresse.isEmpty() || email.isEmpty() ||
                numTel.isEmpty() || description.isEmpty() || date == null || packName == null) {
            showAlert(Alert.AlertType.WARNING, "Champs manquants", "Veuillez remplir tous les champs.");
            return;
        }

        // Récupérer l'ID du pack sélectionné
        int packId = reservationService.getPackIdByName(packName);
        if (packId == -1) {
            showAlert(Alert.AlertType.ERROR, "Erreur", "Le pack sélectionné n'existe pas.");
            return;
        }

        // Créer l'objet réservation
        Reservation reservation = new Reservation(nom, prenom, adresse, email, numTel, description, date, packId);

        // Ajouter la réservation via le service
        boolean success = reservationService.ajouterReservation(reservation);
        if (success) {
            showAlert(Alert.AlertType.INFORMATION, "Succès", "Réservation ajoutée avec succès !");
            clearFields();
        } else {
            showAlert(Alert.AlertType.ERROR, "Erreur", "Échec de l'ajout de la réservation.");
        }
    }

    @FXML
    private void annuler(ActionEvent event) {
        clearFields();
    }

    private void clearFields() {
        nomField.clear();
        prenomField.clear();
        adresseField.clear();
        emailField.clear();
        numTelField.clear();
        descriptionField.clear();
        dateField.setValue(null);
        packField.getSelectionModel().clearSelection();
    }

    private void showAlert(Alert.AlertType alertType, String title, String content) {
        Alert alert = new Alert(alertType);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(content);
        alert.showAndWait();
    }
}
